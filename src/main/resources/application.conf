akka {
  loggers          = ["de.heikoseeberger.akkalog4j.Log4jLogger"]
  loglevel         = debug
  log-dead-letters = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  cluster {
    auto-down-unreachable-after       = 0s
    down-removal-margin               = 100ms
    seed-nodes                        = ["akka.tcp://reactive-flows-system@"${reactive-flows.interface}":2551"]
    unreachable-nodes-reaper-interval = 250ms

    failure-detector {
      acceptable-heartbeat-pause = 1s
      hearbeat-interval          = 250ms
      threshold                  = 4.0
    }
  }

  extensions = ["akka.cluster.ddata.DistributedData"]

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"

      leveldb-shared.store {
        dir    = ${java.io.tmpdir}"/shared-journal"
        native = off
      }
    }

    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
    }
  }

  remote {
    enabled-transports          = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = error

    netty.tcp {
      hostname = ${reactive-flows.interface}
      port     = 2551
    }
  }
}

reactive-flows {
  interface = "127.0.0.1"
  interface = ${?HOSTNAME}

  flow-facade {
    shard-count = 20
  }

  http-service {
    event-buffer-size   = 100
    flow-facade-timeout = 250 ms
    interface           = ${reactive-flows.interface}
    port                = 9000
    self-timeout        = 100 ms
  }
}
